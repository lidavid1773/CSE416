{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/map\";\nconst initialState = {\n  map: null,\n  maps: [],\n  isError: false,\n  isSuccess: false,\n  message: \"\"\n};\nconst getMessage = error => {\n  return error.response && error.response.data && error.response.data.message || error.message || error.toString();\n};\nexport const getMap = createAsyncThunk(\"maps/getOne\", async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.user.token;\n    return await api.getMap(id, token);\n  } catch (error) {\n    // send error message as payload\n    return thunkAPI.rejectWithValue(getMessage(error));\n  }\n});\nexport const getMaps = createAsyncThunk(\"maps/getAll\", async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.user.token;\n    return await api.getMaps(token);\n  } catch (error) {\n    // send error message as payload\n    return thunkAPI.rejectWithValue(getMessage(error));\n  }\n});\nexport const deleteMap = createAsyncThunk(\"maps/delete\", async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.user.token;\n    return await api.deleteMap(id, token);\n  } catch (error) {\n    // send error message as payload\n    return thunkAPI.rejectWithValue(getMessage(error));\n  }\n});\nexport const mapSlice = createSlice({\n  name: \"map\",\n  initialState,\n  reducers: {\n    resetState: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(getMap.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.map = action.payload;\n    }).addCase(getMap.rejected, (state, action) => {\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getMaps.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.maps = action.payload;\n    }).addCase(getMaps.rejected, (state, action) => {\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(deleteMap.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.maps = state.maps.filter(map => map._id !== action.payload.id);\n    }).addCase(deleteMap.rejected, (state, action) => {\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  resetState\n} = mapSlice.actions;\nexport default mapSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","map","maps","isError","isSuccess","message","getMessage","error","response","data","toString","getMap","id","thunkAPI","token","getState","user","rejectWithValue","getMaps","_","deleteMap","mapSlice","name","reducers","resetState","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","filter","_id","actions","reducer"],"sources":["/Users/yoyo/CSE416/frontend/src/features/maps/mapSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/map\";\n\nconst initialState = {\n  map: null,\n  maps: [],\n  isError: false,\n  isSuccess: false,\n  message: \"\",\n};\n\nconst getMessage = (error) => {\n  return (\n    (error.response && error.response.data && error.response.data.message) ||\n    error.message ||\n    error.toString()\n  );\n};\n\nexport const getMap = createAsyncThunk(\"maps/getOne\", async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.user.token;\n    return await api.getMap(id, token);\n  } catch (error) {\n    // send error message as payload\n    return thunkAPI.rejectWithValue(getMessage(error));\n  }\n});\n\nexport const getMaps = createAsyncThunk(\"maps/getAll\", async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.user.token;\n    return await api.getMaps(token);\n  } catch (error) {\n    // send error message as payload\n    return thunkAPI.rejectWithValue(getMessage(error));\n  }\n});\n\nexport const deleteMap = createAsyncThunk(\n  \"maps/delete\",\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().user.user.token;\n      return await api.deleteMap(id, token);\n    } catch (error) {\n      // send error message as payload\n      return thunkAPI.rejectWithValue(getMessage(error));\n    }\n  }\n);\n\nexport const mapSlice = createSlice({\n  name: \"map\",\n  initialState,\n  reducers: {\n    resetState: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getMap.fulfilled, (state, action) => {\n        state.isSuccess = true;\n        state.map = action.payload;\n      })\n      .addCase(getMap.rejected, (state, action) => {\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(getMaps.fulfilled, (state, action) => {\n        state.isSuccess = true;\n        state.maps = action.payload;\n      })\n      .addCase(getMaps.rejected, (state, action) => {\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(deleteMap.fulfilled, (state, action) => {\n        state.isSuccess = true;\n        state.maps = state.maps.filter((map) => map._id !== action.payload.id);\n      })\n      .addCase(deleteMap.rejected, (state, action) => {\n        state.isError = true;\n        state.message = action.payload;\n      });\n  },\n});\n\nexport const { resetState } = mapSlice.actions;\nexport default mapSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}